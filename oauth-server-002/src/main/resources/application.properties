server.port=8083
# if you set spring-security in the project, project requires user-id and password in order to access every APIS with default account.
#spring.security.user.name=user
#spring.security.user.password=test
security.user.name=user
security.user.password=test
# client-id: client identifier
# client-secret: private chars(password) to exchange access-token.(regularly-password)
#spring.security.oauth2.client.registration.oauth-demo-001.client-id=foo
#spring.security.oauth2.client.registration.oauth-demo-001.client-secret=bar


security.oauth2.client.client-id = foo
security.oauth2.client.client-secret = bar
# default -> denyAll   (activate-> oauth/check_token)

#security.oauth2.authorization.check-token-access=isAuthenticated()
security.oauth2.authorization.token-key-access=isAuthenticated()


logging.level.org.springframework.security=debug
logging.level.org.springframework.boot=debug

# \uB0B4\uC7A5 db \uD65C\uC131\uD654 

spring.h2.console.enabled=true
spring.h2.console.path=/h2-console


# \uC678\uBD80 DB \uC124\uC815\uC2DC \uC544\uB798\uC758 \uC8FC\uC11D\uC744 \uD65C\uC131\uD654 \uC2DC\uD0A8 \uD6C4 \uAD00\uB828 DB \uC124\uC815 \uC815\uBCF4\uB97C \uC785\uB825\uD55C\uB2E4.
#spring:
#  datasource:
#    url: jdbc:h2:tcp://localhost/~/api;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
#    driverClassName: org.h2.Driver
#    username: sa
#    password: